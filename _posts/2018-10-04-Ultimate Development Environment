---
title: The Ultimate Development Environment
layout: post
author: Barco van Rhijn
category: Git
---

So it finally happened this week. After Dabbling in Linux for about 10 years on and off and managing Linux servers for clients for around 6 years I finally found a very compelling reason to move my house and only work from Linux.

I started out my Career in the early 2000's in a small Software Development startup called P37 Solutions. The company built out software predominantly in Visual Basic 6 for the Travel Industry to simplify bookings through Amadeus a travel network. Amadeus was known to introduce a slew of virus infections into Travel agencies and general machines used to be air gapped from the Amadeus machines. A Tech back then told me that once a machine hit around 2000 virus infections it actually got more usable because the different virusses where competing for the same resources to the point that none of them had much success. These machines where so Virus Infected that you'd crash windows by even attempting to clear anything up.  I tried as a rookie, it was a pointless endeavour.
P37 built out Smaller projects on Access. It was an awesome environment that provided a good grounding in SQL database design and Screen layout. 
As a junior volunteer Part of my initial responsibillities in the Office was supporting senior developers by rebuilding their the Windows 98, 2000 and later XP machines. Back then Dev machines would generally only retain reliable software environments for 6-9months. Developers where pushing these machines hard and before XP adding DLL's and installing and removing apps created heaps of clutter resulting in early crashes.
I quickly got hired 3months later and promoted to builing out UI, Debugging and supporting customers (remotely as soon as the first cellular networks landed) and later managing their Windows Servers. 

Back then the benchmark I set for rebuilding a Developer machine from Format to finish was around 4hours. This sounds long but back then most techs took even longer. Deployment strategies have come a long way since then.
Most Windows installers had yet to meet the command line and where built out with UI only. Driver disks needed to be stored carefully or hours of driver hunting would ensue. Plug and Play was jokingly referred to as Plug and Pray in the pre Windows7 world. We're really spoiled in the modern os by loads of automations we take for granted.

I've been thinking about great Development setups for about 2 Decades. I've gotten very good at getting the most out of the Windows machines I've used. Windows7 has served me well over the years and it's become a nice stable environment for the most part.

With the introduction of Windows 8 looking much like the historic release of Windows Millenium, I was eager to see what 8.1 would bring. But sadly 8.1 looked like another Vista release taking effectively double the Ram to boot up that Windows 8 did. It was not a great situation since you need every ounce of Ram once you start emulating Android devices. I moved back to Windows7 it's a nice stable environment that works reliably for several years unless you really maintain it poorly and mess it up.

I'd recently been reading about the Developer experience on Ubuntu. And decided to give it a go. I'd moved some of my Front End development to Ubuntu 18.04 and it was going great. 

Windows 10's initial release rolled around. It was more polished and reminded me of the early days of Windows7. At least it had potential. 
But it had one nagging issue. Forced updates was a mistake from the get go. Non-enterprise users where forced to become gineu pigs. 

Microsoft had been culling it's testing team for some years which has really reduced code quality. Anyway fast forward to Oct 2018. 
KB4532693 rolled around and I was one of the lucky ones to get my drive wiped. But this update in my case formatted the drive good and dropped all partitions. None of the fixes worked because Windows was lost in that update. Not only that but Windows managed to take my Ubuntu partitions with it Kamakazi style. 

I moved back to Windows7 and somehow that installation was short lived. It's a first experience out of years of Windows installations I'd never seen a double whammy.

So this was the start of a beautiful frienship between me and my Ubuntu environment. It's fast and efficient. Updates are small. Redeploying after the crash was a dream. I'm up and running from backups with my Git repo's syncronized and entire development stack reinstalled in about 90min flat. 

