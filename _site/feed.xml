<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2021-02-25T10:51:36+02:00</updated><id>/feed.xml</id><entry><title type="html">Delving into TypeScript - first impressions</title><link href="/typescript/2021/02/22/TypeScript-Diving-Deeper.html" rel="alternate" type="text/html" title="Delving into TypeScript - first impressions" /><published>2021-02-22T00:00:00+02:00</published><updated>2021-02-22T00:00:00+02:00</updated><id>/typescript/2021/02/22/TypeScript%20Diving%20Deeper</id><content type="html" xml:base="/typescript/2021/02/22/TypeScript-Diving-Deeper.html">&lt;p&gt;I discovered recently that Ionic have made VueJs quite a priority on their development line-up. And since I’ve got a new project lined up I decided to dig in and see what they’ve got.&lt;/p&gt;

&lt;p&gt;So with VueJS and Ionic came a recommendation to keep Typescript. And my journey began Mid Jan 2021 with types. It’s not been all love at first bite but after delving into a 60min carsh course I’ve been able to survive the first few days. The promised gains seem worth the pain.&lt;/p&gt;

&lt;p&gt;My first few days have come with intense pain though. After coding for a few days I kept running into Type errors that I did not quite know how to solve. Initially it seemed that TS is the roadblock to getting any code to work. I’d write out perfect JS and it would fall on it’s face every time. Test it outside of TS and it works flawlessly.&lt;/p&gt;

&lt;p&gt;And after spending a few days chasing Type errors I decided to dig deeper as there has to be something I missed initially.&lt;/p&gt;

&lt;p&gt;##A few lessons learned&lt;/p&gt;

&lt;p&gt;###Runtime errors with TS and Ionic sometimes show skewed line numbers. 
This seems to be a current bug relating to SFC in VueJS. My Termporary work around has been to code with hot reload and fix errors immediately before proceeding. It’s a better way of coding that leads to better productivity any way.&lt;/p&gt;

&lt;p&gt;###Git is your friend
When line numbers go fuzzy and minutes go by. It’s often easier to revert a small change and start it again. Since we’ve got git might as well put it to good use.&lt;/p&gt;

&lt;p&gt;###Types are easy
The fundimentals of Types are not hard. But you need to give you brain some time to absorb the implications in code.&lt;/p&gt;

&lt;p&gt;Most of TS is really just JS and you can actually partially impliment TS in a project.&lt;/p&gt;

&lt;p&gt;Essentially Types are a way of documenting expected data types and values for all variables, arrays and objects. There’s much debate around this but the simplest way is that you should only use Interfaces for Objects. For all the rest use type definitions.&lt;/p&gt;

&lt;p&gt;In a pinch you can define the type as Any. But this should be used with caution as it sort of negates the benefits of using TS in the first place.&lt;/p&gt;

&lt;p&gt;As a Senior Ionic Dev pointed out types are mostly inferred in Ionic and you’ll run into type issues if you’re trying to do something too radical.&lt;/p&gt;</content><author><name>Barco van Rhijn</name></author><category term="TypeScript" /><summary type="html">I discovered recently that Ionic have made VueJs quite a priority on their development line-up. And since I’ve got a new project lined up I decided to dig in and see what they’ve got.</summary></entry><entry><title type="html">Booting up my personal Blog</title><link href="/jekyll/2021/01/15/Blog-Rebooting.html" rel="alternate" type="text/html" title="Booting up my personal Blog" /><published>2021-01-15T00:00:00+02:00</published><updated>2021-01-15T00:00:00+02:00</updated><id>/jekyll/2021/01/15/Blog-Rebooting</id><content type="html" xml:base="/jekyll/2021/01/15/Blog-Rebooting.html">&lt;p&gt;I’ve been keeping notes of projects for some time. And have meant to publish this for the benefits of others to learn from some of the experiences I’ve had. And to share some of my though process.&lt;/p&gt;

&lt;p&gt;So Here goes….&lt;/p&gt;

&lt;h2 id=&quot;github-meet-jekyl&quot;&gt;Github, Meet Jekyl&lt;/h2&gt;
&lt;p&gt;To get a Github pages site up you need to start a repo with your username.githubpages.com. You’ll find the the &lt;a href=&quot;https://pages.github.com/&quot;&gt; getting started with github pages &lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;can-you-say-jekyll&quot;&gt;Can you say Jekyll?&lt;/h2&gt;
&lt;p&gt;This site is based of Jekyl which is a Jamstack site framework built with Ruby on Rails. It’s Github’s reccomended default although you can use things like Hugo or others. I like the simplicity of Jekyll which allows for maximum design expression with little fuss.&lt;/p&gt;

&lt;p&gt;Jekyl speaks HTML, Markdown, JSON and more. It’s a fantastic way to get technical content up if you don’t need a backend.&lt;/p&gt;

&lt;h2 id=&quot;where-do-i-put-images-in-jekyll&quot;&gt;Where do I put images in Jekyll&lt;/h2&gt;
&lt;p&gt;Under the main Assets folder. The _site folder is generated on build in Jekyll.&lt;/p&gt;

&lt;h2 id=&quot;adding-classes-in-jekyll-markdown&quot;&gt;Adding classes in Jekyll Markdown&lt;/h2&gt;

&lt;p&gt;Just add your classes like this
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{: .rounded .image}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;![alt text](logo.png &quot;Title&quot;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will render out the image tag with the classes you specified.&lt;/p&gt;

&lt;h2 id=&quot;ready-set-lauch&quot;&gt;Ready Set Lauch&lt;/h2&gt;
&lt;p&gt;Write, Build, Git Push and we’re off to a beautiful friendship.&lt;/p&gt;</content><author><name>Barco van Rhijn</name></author><category term="Jekyll" /><summary type="html">I’ve been keeping notes of projects for some time. And have meant to publish this for the benefits of others to learn from some of the experiences I’ve had. And to share some of my though process.</summary></entry><entry><title type="html">Developer Analytics in Wakatime</title><link href="/workflow/2021/01/02/Tracking-code-Wakatime.html" rel="alternate" type="text/html" title="Developer Analytics in Wakatime" /><published>2021-01-02T00:00:00+02:00</published><updated>2021-01-02T00:00:00+02:00</updated><id>/workflow/2021/01/02/Tracking-code-Wakatime</id><content type="html" xml:base="/workflow/2021/01/02/Tracking-code-Wakatime.html">&lt;p&gt;I’ve been looking at ways to track overall time spent coding and dig deeper into where I spend time.&lt;/p&gt;

&lt;h2 id=&quot;task-tracking-is-not-always-enough&quot;&gt;Task tracking is not always enough&lt;/h2&gt;
&lt;p&gt;As a Freelancer I track time for projects short and long term but often feel that I want to get an overview. Especially when I’m working a few short term projects along side my longer term project work.&lt;/p&gt;

&lt;h2 id=&quot;meet-wakatime&quot;&gt;Meet WakaTime&lt;/h2&gt;
&lt;p&gt;I discovered WakaTime which is a great way of setting code goals to ensure that I spend more time coding. It helps me see when customer communication starts being too big a part of my work day. Since it intergrates directly into my IDE it’s a great fit.&lt;/p&gt;

&lt;h3 id=&quot;coding-goals&quot;&gt;Coding goals&lt;/h3&gt;
&lt;p&gt;Using WakaTime has allowed me to set Coding goals&lt;/p&gt;

&lt;h3 id=&quot;understand-what-you-code&quot;&gt;Understand what you code&lt;/h3&gt;
&lt;p&gt;And it gives an interesting graph that shows what languages dominated your coding day.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/
wakatime-coding-stats.png&quot; alt=&quot;alt wakatime&quot; /&gt;&lt;/p&gt;
&lt;h4 id=&quot;heres-an-example-of-how-my-coding-time-was-split-today-youll-notice-other-here-which-was-spent-building-out-an-email-signature-for-a-client&quot;&gt;Here’s an example of how my coding time was split today. You’ll notice other here which was spent building out an email signature for a client.&lt;/h4&gt;

&lt;h3 id=&quot;much-more&quot;&gt;Much more&lt;/h3&gt;
&lt;p&gt;Waka time has much to offer and is a great way to monitor lots of coding metrics.&lt;/p&gt;

&lt;p&gt;Overall it’s good fun and highly reccomended.&lt;/p&gt;</content><author><name>Barco van Rhijn</name></author><category term="Workflow" /><summary type="html">I’ve been looking at ways to track overall time spent coding and dig deeper into where I spend time.</summary></entry><entry><title type="html">Developer Analytics in Wakatime</title><link href="/workflow/2021/01/01/Social-Sharing.html" rel="alternate" type="text/html" title="Developer Analytics in Wakatime" /><published>2021-01-01T00:00:00+02:00</published><updated>2021-01-01T00:00:00+02:00</updated><id>/workflow/2021/01/01/Social-Sharing</id><content type="html" xml:base="/workflow/2021/01/01/Social-Sharing.html"></content><author><name>Barco van Rhijn</name></author><category term="Workflow" /><summary type="html"></summary></entry><entry><title type="html">Hello Ruby</title><link href="/ruby/2020/12/18/hello-Ruby.html" rel="alternate" type="text/html" title="Hello Ruby" /><published>2020-12-18T00:00:00+02:00</published><updated>2020-12-18T00:00:00+02:00</updated><id>/ruby/2020/12/18/hello-Ruby</id><content type="html" xml:base="/ruby/2020/12/18/hello-Ruby.html">&lt;p&gt;I’ve been hearing about Ruby for some years. But I’ve been sceptical about the amount of moving parts (Magic) that are introduced by Ruby in the process of development. So this year I decided to test it out for myself in the holidays.&lt;/p&gt;

&lt;p&gt;In 2020  I’ve built out a small Project in Laravel that handles Reseller packages and Pricing for B2B it feels familiar coming from the Javascript side of things. I also disovered that Laravel sort of combines ideas from JS and Ruby.&lt;/p&gt;

&lt;p&gt;One of the Developers I follow online mentioned what they’ve been doing on Ruby and I was intrigued to take a look. Well I spent a today and learned the basics.&lt;/p&gt;

&lt;p&gt;So far I like that Ruby is similar in it’s abillity to scaffold various parts of an application. After learning how that works it no longer seems like a Ruby Project can spin out of control.&lt;/p&gt;

&lt;h1 id=&quot;what-i-like&quot;&gt;What I like&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;I like how easy CRUD is with Ruby - feels like Laravel.&lt;/li&gt;
  &lt;li&gt;The stack feels less fragmented than JS stacks do.&lt;/li&gt;
  &lt;li&gt;The language so far seems enjoyable.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;what-i-may-have-to-learn-to-love&quot;&gt;What I may have to learn to love&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Deployement of Ruby projects seem to be a bit more complicated than PHP but not so much more complicated than Node.js apps. I manage several VPS’ running production code. So It’s not insurmountable to deploy.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;what-i-learned&quot;&gt;What I learned&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Intalling a Ruby Development environment
Learned that this part of Ruby on Windows can be tricky and how to get it done.&lt;/li&gt;
  &lt;li&gt;Ruby MVC and Project structure
The Ruby project Structure is remarkably easy to understand coming from Laravel&lt;/li&gt;
  &lt;li&gt;Routing with Ruby
Routing uses&lt;/li&gt;
  &lt;li&gt;Variables in Ruby
Ruby variables are just words like in Bash unless you want to increase their scope. Variables passed from controller to page are written @variable&lt;/li&gt;
  &lt;li&gt;Finding and Using Gems&lt;/li&gt;
  &lt;li&gt;Defining production vs development gems&lt;/li&gt;
  &lt;li&gt;Controllers in Ruby
Controllers are&lt;/li&gt;
  &lt;li&gt;Migrations and Databases in Ruby&lt;/li&gt;
  &lt;li&gt;Production v.s. Development configs&lt;/li&gt;
  &lt;li&gt;Creating CRUD forms in Ruby&lt;/li&gt;
  &lt;li&gt;Add custom styling to Ruby elements&lt;/li&gt;
  &lt;li&gt;Use Devise to create login and profile pages&lt;/li&gt;
  &lt;li&gt;Database Associations&lt;/li&gt;
  &lt;li&gt;Controllers beyond basic Crud&lt;/li&gt;
  &lt;li&gt;Deploying Ruby code to git and Heroku&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Planning to build out a first project over Tomorrow.&lt;/p&gt;</content><author><name>Barco van Rhijn</name></author><category term="Ruby" /><summary type="html">I’ve been hearing about Ruby for some years. But I’ve been sceptical about the amount of moving parts (Magic) that are introduced by Ruby in the process of development. So this year I decided to test it out for myself in the holidays.</summary></entry><entry><title type="html">Vanilla PHP</title><link href="/php/2020/08/20/Vanilla-PHP.html" rel="alternate" type="text/html" title="Vanilla PHP" /><published>2020-08-20T00:00:00+02:00</published><updated>2020-08-20T00:00:00+02:00</updated><id>/php/2020/08/20/Vanilla-PHP</id><content type="html" xml:base="/php/2020/08/20/Vanilla-PHP.html">&lt;p&gt;A Senior PHP developer approached me about collaborating on a Vanilla PHP project. His requirement was for us to work according to his php standard.&lt;/p&gt;

&lt;p&gt;We started building template engine that could be easily filled out with details to generate brand sites.&lt;/p&gt;

&lt;p&gt;I asked to do the front-end generating code. I was inspired by how Atomic Design systems worked and decided to build out a template engine with some overlapping features with Twigg. Since the requirements was that there be no dependancies I could not use Twigg or Handlebars or other such systems. 
The project consisted of two parts. A UI that was customer facing and centrally manages all the site information and links. And the Template builder which connects to the API and parses the Json into arrays and then outputs this in a template. The API defines several settings that makes the Customer facing builder allow simple UI configurations.&lt;/p&gt;

&lt;p&gt;I discovered that some of what I wanted to do to make the templating more flexible is known as Meta programming. I discussed ways we could free the data model by moving to Json in Mysql or Mongodb. Because after the first few days it became apparent that each new change.&lt;/p&gt;

&lt;p&gt;In the process of doing the work I decided to learn how to build unit tests in PHP. I’ve just touched on the basics of doing this in Javascript after what I’d learned in FreeCodeCamp. But I’d not used this in PHP yet. In the past I’d mostly customized PHP code or written plugins which did not have enough code to make Unit tests a viable option. 
When I asked the developer I worked with it turned out that he had not used PHPUnit before so I was on my own with this.&lt;/p&gt;

&lt;p&gt;taking on a Vanilla PHP project for a client. In 3 Weeks I coded up my first php from scratch project in Vanilla PHP and produced a minimum viable product as part of an attempt to partner up with senior PHP developer. The 3 weeks was valuable experience but the partnership was not well matched. When comparing notes I was producing 6months of output in 3weeks compared to the other dev’s output. I had started with a blank canvas and PHP documentation and 5min worth of Sage advice.&lt;/p&gt;</content><author><name>Barco van Rhijn</name></author><category term="PHP" /><summary type="html">A Senior PHP developer approached me about collaborating on a Vanilla PHP project. His requirement was for us to work according to his php standard.</summary></entry><entry><title type="html">Html Part 5</title><link href="/2020/01/19/HTML-Part-5.html" rel="alternate" type="text/html" title="Html Part 5" /><published>2020-01-19T00:00:00+02:00</published><updated>2020-01-19T00:00:00+02:00</updated><id>/2020/01/19/HTML-Part-5</id><content type="html" xml:base="/2020/01/19/HTML-Part-5.html">&lt;p&gt;Make Screen Reader Navigation Easier with the header Landmark		Jan 19, 2019
Wrap Content in the article Element		Jan 19, 2019
Improve Chart Accessibility with the figure Element		Jan 19, 2019
Improve Accessibility of Audio Content with the audio Element		Jan 19, 2019
Make Screen Reader Navigation Easier with the footer Landmark		Jan 19, 2019
Make Screen Reader Navigation Easier with the nav Landmark		Jan 19, 2019&lt;/p&gt;</content><author><name></name></author><summary type="html">Make Screen Reader Navigation Easier with the header Landmark Jan 19, 2019 Wrap Content in the article Element Jan 19, 2019 Improve Chart Accessibility with the figure Element Jan 19, 2019 Improve Accessibility of Audio Content with the audio Element Jan 19, 2019 Make Screen Reader Navigation Easier with the footer Landmark Jan 19, 2019 Make Screen Reader Navigation Easier with the nav Landmark Jan 19, 2019</summary></entry><entry><title type="html">Js 2</title><link href="/2019/08/13/JS-2.html" rel="alternate" type="text/html" title="Js 2" /><published>2019-08-13T00:00:00+02:00</published><updated>2019-08-13T00:00:00+02:00</updated><id>/2019/08/13/JS-2</id><content type="html" xml:base="/2019/08/13/JS-2.html">&lt;p&gt;Storing Values with the Assignment Operator		Aug 13, 2019
Declare JavaScript Variables		Aug 13, 2019
Comment Your JavaScript Code		Aug 13, 2019
Appending Variables to Strings		Aug 13, 2019
Constructing Strings with Variables		Aug 13, 2019
Concatenating Strings with the Plus Equals Operator		Aug 13, 2019
Concatenating Strings with Plus Operator		Aug 13, 2019
Quoting Strings with Single Quotes		Aug 13, 2019
Escaping Literal Quotes in Strings		Aug 13, 2019
Declare String Variables		Aug 13, 2019
Compound Assignment With Augmented Division		Aug 13, 2019
Compound Assignment With Augmented Multiplication		Aug 13, 2019
Compound Assignment With Augmented Subtraction		Aug 13, 2019
Compound Assignment With Augmented Addition		Aug 13, 2019
Finding a Remainder in JavaScript		Aug 13, 2019
Understanding Case Sensitivity in Variables		Aug 13, 2019
Understanding Uninitialized Variables		Aug 13, 2019
Initializing Variables with the Assignment Operator		Aug 13, 2019
Manipulate Arrays With unshift()		Aug 13, 2019
Manipulate Arrays With shift()		Aug 13, 2019
Manipulate Arrays With push()		Aug 13, 2019
Access Multi-Dimensional Arrays With Indexes		Aug 13, 2019
Modify Array Data With Indexes		Aug 13, 2019
Access Array Data with Indexes		Aug 13, 2019
Nest one Array within Another Array		Aug 13, 2019
Store Multiple Values in one Variable using JavaScript Arrays		Aug 13, 2019
Word Blanks		Aug 13, 2019
Use Bracket Notation to Find the Nth-to-Last Character in a String		Aug 13, 2019
Use Bracket Notation to Find the Last Character in a String		Aug 13, 2019
Use Bracket Notation to Find the Nth Character in a String		Aug 13, 2019
Understand String Immutability		Aug 13, 2019
Use Bracket Notation to Find the First Character in a String		Aug 13, 2019
Find the Length of a String		Aug 13, 2019
Comparison with the Strict Equality Operator		Aug 13, 2019
Comparison with the Equality Operator		Aug 13, 2019
Use Conditional Logic with If Statements		Aug 13, 2019
Understanding Boolean Values		Aug 13, 2019
Stand in Line		Aug 13, 2019
Assignment with a Returned Value		Aug 13, 2019
Manipulate Arrays With pop()		Aug 13, 2019
Understanding Undefined Value returned from a Function		Aug 13, 2019
Return a Value from a Function with Return		Aug 13, 2019
Global vs. Local Scope in Functions		Aug 13, 2019
Local Scope and Functions		Aug 13, 2019
Global Scope and Functions		Aug 13, 2019
Passing Values to Functions with Arguments		Aug 13, 2019
Write Reusable JavaScript with Functions		Aug 13, 2019
Shopping List		Aug 13, 2019
Selecting from Many Options with Switch Statements		Aug 13, 2019
Golf Code		Aug 13, 2019
Chaining If Else Statements		Aug 13, 2019
Logical Order in If Else Statements		Aug 13, 2019
Introducing Else If Statements		Aug 13, 2019
Introducing Else Statements		Aug 13, 2019
Comparisons with the Logical Or Operator		Aug 13, 2019
Comparisons with the Logical And Operator		Aug 13, 2019
Comparison with the Less Than Or Equal To Operator		Aug 13, 2019
Comparison with the Less Than Operator		Aug 13, 2019
Comparison with the Greater Than Or Equal To Operator		Aug 13, 2019
Comparison with the Greater Than Operator		Aug 13, 2019
Comparison with the Strict Inequality Operator		Aug 13, 2019
Comparison with the Inequality Operator		Aug 13, 2019
Practice comparing different values		Aug 13, 2019
Testing Objects for Properties		Aug 13, 2019
Using Objects for Lookups		Aug 13, 2019
Delete Properties from a JavaScript Object		Aug 13, 2019
Add New Properties to a JavaScript Object		Aug 13, 2019
Updating Object Properties		Aug 13, 2019
Accessing Object Properties with Variables		Aug 13, 2019
Accessing Object Properties with Bracket Notation		Aug 13, 2019
Accessing Object Properties with Dot Notation		Aug 13, 2019
Build JavaScript Objects		Aug 13, 2019
Counting Cards		Aug 13, 2019
Return Early Pattern for Functions		Aug 13, 2019
Returning Boolean Values from Functions		Aug 13, 2019
Replacing If Else Chains with Switch		Aug 13, 2019
Multiple Identical Options in Switch Statements		Aug 13, 2019
Adding a Default Option in Switch Statements		Aug 13, 2019
Escape Sequences in Strings		Aug 13, 2019
Iterate Through an Array with a For Loop		Aug 13, 2019
Count Backwards With a For Loop		Aug 13, 2019
Iterate Odd Numbers With a For Loop		Aug 13, 2019
Iterate with JavaScript For Loops		Aug 13, 2019
Iterate with JavaScript While Loops		Aug 13, 2019
Record Collection		Aug 13, 2019
Accessing Nested Arrays		Aug 13, 2019
Accessing Nested Objects		Aug 13, 2019
Manipulating Complex Objects		Aug 13, 2019&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Javascript</title><link href="/javascript/2019/08/01/JS.html" rel="alternate" type="text/html" title="Javascript" /><published>2019-08-01T00:00:00+02:00</published><updated>2019-08-01T00:00:00+02:00</updated><id>/javascript/2019/08/01/JS</id><content type="html" xml:base="/javascript/2019/08/01/JS.html">&lt;p&gt;So while digging into React I’ve decided to ensure I have as complete an understading of JS as possible.&lt;/p&gt;

&lt;p&gt;So I’m digging into JS fundimentals&lt;/p&gt;

&lt;p&gt;Divide One Decimal by Another with JavaScript		Aug 1, 2019
Multiply Two Decimals with JavaScript		Aug 1, 2019
Create Decimal Numbers with JavaScript		Aug 1, 2019
Decrement a Number with JavaScript		Aug 1, 2019
Increment a Number with JavaScript		Aug 1, 2019
Divide One Number by Another with JavaScript		Aug 1, 2019
Multiply Two Numbers with JavaScript		Aug 1, 2019
Subtract One Number from Another with JavaScript		Aug 1, 2019
Add Two Numbers with JavaScript		Aug 1, 2019&lt;/p&gt;</content><author><name>Barco van Rhijn</name></author><category term="Javascript" /><summary type="html">So while digging into React I’ve decided to ensure I have as complete an understading of JS as possible.</summary></entry><entry><title type="html">Form Accesibility</title><link href="/2019/01/22/Form-Accesibility.html" rel="alternate" type="text/html" title="Form Accesibility" /><published>2019-01-22T00:00:00+02:00</published><updated>2019-01-22T00:00:00+02:00</updated><id>/2019/01/22/Form-Accesibility</id><content type="html" xml:base="/2019/01/22/Form-Accesibility.html">&lt;p&gt;Improve Form Field Accessibility with the label Element		Mar 22, 2019&lt;/p&gt;</content><author><name></name></author><summary type="html">Improve Form Field Accessibility with the label Element Mar 22, 2019</summary></entry></feed>